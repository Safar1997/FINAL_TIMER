{"version":3,"sources":["components/timeFormatter.jsx","components/Timer/timer.jsx","components/Timer/index.js","components/Countdown/countdown.jsx","components/Countdown/inputTime.jsx","App.jsx","index.jsx","components/Countdown/voice/audio.mp3"],"names":["timer","timeInMilisec","min","Math","floor","sec","milisec","toString","padStart","initialState","count","start","startTime","Timer","props","startTimer","setState","state","Date","now","timerGo","timerId","setTimeout","clearTimeout","resetTimer","this","type","onClick","className","Component","Countdownn","currentTime","timeToCount","progress","percent","status","defaultProps","InputTime","sliderChange","value","minutesChange","secondsChange","startOrPause","didStart","minOrSecValue","id","seconds","minutes","audio","Audio","soundfile","play","pause","step","max","disabled","onChange","placeholder","rype","TabPane","Tabs","callback","key","console","log","App","defaultActiveKey","tab","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e48cca11.chunk.js","sourcesContent":["const timer = timeInMilisec => {\n  const min = Math.floor(Math.floor(timeInMilisec / 1000) / 60);\n  const sec = Math.floor(timeInMilisec / 1000) - min * 60;\n  const milisec = Math.floor((timeInMilisec - sec * 1000 - min * 60 * 1000) / 10);\n  return `${min.toString().padStart(2, '0')}:${sec\n    .toString()\n    .padStart(2, '0')}:${milisec.toString().padStart(2, '0')}`;\n};\n\nexport default timer;\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport timer from '../timeFormatter';\nimport './timer.css';\n\n// eslint-disable-next-line react/prefer-stateless-function\nconst initialState = {\n  count: 0,\n  start: false,\n  startTime: 0,\n};\nexport default class Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  startTimer = () => {\n    this.setState(\n      state => ({\n        start: !state.start,\n        startTime: Date.now() - state.count,\n      }),\n      () => {\n        const timerGo = () => {\n          this.timerId = setTimeout(() => {\n            const { start } = this.state;\n            if (!start) {\n              clearTimeout(this.timerId);\n              return;\n            }\n            this.setState(state => ({\n              count: Date.now() - state.startTime,\n            }));\n            timerGo();\n          }, 25);\n        };\n        timerGo();\n      }\n    );\n  };\n\n  resetTimer = () => {\n    clearTimeout(this.timerId);\n    this.setState(initialState);\n  };\n\n  render() {\n    const { count, start } = this.state;\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.startTimer} className=\"btn\">\n          {start === true ? 'pause' : 'start'}\n        </Button>\n        <div className=\"showTime\">The timer is {timer(count)}</div>\n        <Button type=\"primary\" onClick={this.resetTimer} className=\"btn\">\n          Reset\n        </Button>\n      </div>\n    );\n  }\n}\n","import Timer from './timer';\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport { Progress } from 'antd';\nimport PropTypes from 'prop-types';\nimport timer from '../timeFormatter';\nimport './countdown.css';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class Countdownn extends Component {\n  render() {\n    const { currentTime, timeToCount } = this.props;\n    const progress = Math.floor((currentTime / timeToCount) * 100);\n    return (\n      <div>\n        <Progress percent={progress} status=\"active\" className=\"progressBar\" />\n        <div>Time left : {timer(currentTime)}</div>\n      </div>\n    );\n  }\n}\nCountdownn.defaultProps = {\n  currentTime: 0,\n  timeToCount: 0,\n};\nCountdownn.propTypes = {\n  currentTime: PropTypes.number,\n  timeToCount: PropTypes.number,\n};\n","import React, { Component } from 'react';\nimport { Button, Slider, InputNumber } from 'antd';\nimport './countdown.css';\nimport soundfile from './voice/audio.mp3';\nimport Countdownn from './countdown';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class InputTime extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: false,\n      count: 0,\n      timeToCount: 0,\n      currentTime: 0,\n      didStart: false,\n    };\n  }\n\n  sliderChange = value => {\n    this.setState({\n      timeToCount: value * 1000,\n    });\n  };\n\n  minutesChange = value => {\n    this.setState(state => ({\n      timeToCount: (value * 60 + (Math.floor(state.timeToCount / 1000) % 60)) * 1000,\n    }));\n  };\n\n  secondsChange = value => {\n    this.setState(state => ({\n      timeToCount:\n        ((value % 60) + Math.floor(Math.floor(state.timeToCount / 1000) / 60) * 60) * 1000,\n    }));\n  };\n\n  startOrPause = () => {\n    this.setState(\n      state => ({\n        start: !state.start,\n        startTime: Date.now() - state.count,\n        didStart: true,\n      }),\n      () => {\n        const timerGo = () => {\n          this.timerId = setTimeout(() => {\n            const { start } = this.state;\n            if (!start) {\n              clearTimeout(this.timerId);\n              return;\n            }\n            this.setState(\n              state => ({\n                count: Date.now() - state.startTime,\n                currentTime: state.timeToCount - (Date.now() - state.startTime),\n              }),\n              () => {\n                const { currentTime, didStart } = this.state;\n                if (currentTime < 24) {\n                  this.setState({\n                    didStart: false,\n                  });\n                }\n                if (currentTime < 24 && didStart) {\n                  clearTimeout(this.timerId);\n                  this.setState({\n                    count: 0,\n                    start: false,\n                    startTime: 0,\n                    currentTime: 0,\n                    didStart: false,\n                  });\n                }\n              }\n            );\n            timerGo();\n          }, 25);\n        };\n        timerGo();\n      }\n    );\n  };\n\n  resetTimer = () => {\n    clearTimeout(this.timerId);\n    this.setState({\n      count: 0,\n      start: false,\n      startTime: 0,\n      currentTime: 0,\n      didStart: false,\n    });\n  };\n\n  minOrSecValue = id => () => {\n    const { timeToCount } = this.state;\n    let seconds = Math.floor(timeToCount / 1000) % 60;\n    let minutes = Math.floor(Math.floor(timeToCount / 1000) / 60);\n    if (minutes === 720) {\n      seconds = 0;\n    }\n    if (id === 'minutes') {\n      minutes = minutes < 10 ? `0${minutes}` : minutes;\n      return minutes;\n    }\n    return seconds;\n  };\n\n  render() {\n    const { currentTime, start, timeToCount } = this.state;\n    const audio = new Audio(soundfile);\n\n    if (currentTime < 0.2 && currentTime > 0.01) {\n      audio.play();\n    } else {\n      audio.pause();\n    }\n\n    return (\n      <>\n        in seconds\n        <Slider\n          step={15}\n          min={0}\n          max={3600}\n          disabled={currentTime !== 0}\n          className=\"slider\"\n          onChange={this.sliderChange}\n        />\n        type minutes\n        <InputNumber\n          max={720}\n          min={0}\n          value={this.minOrSecValue('minutes')()}\n          placeholder=\"Minutes\"\n          className=\"inputTime\"\n          onChange={this.minutesChange}\n          disabled={currentTime !== 0}\n        />\n        type seconds\n        <InputNumber\n          max={60}\n          min={0}\n          value={this.minOrSecValue('seconds')()}\n          placeholder=\"Seconds\"\n          rype=\"number\"\n          className=\"inputTime\"\n          onChange={this.secondsChange}\n          disabled={currentTime !== 0}\n        />\n        <Countdownn currentTime={currentTime} timeToCount={timeToCount} />\n        <Button type=\"primary\" onClick={this.startOrPause} className=\"btn\">\n          {start ? 'pause' : 'start'}\n        </Button>\n        <Button type=\"primary\" onClick={this.resetTimer} className=\"btn\">\n          Reset\n        </Button>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { Tabs } from 'antd';\nimport Timer from './components/Timer/index';\nimport InputTime from './components/Countdown/inputTime';\n\nconst { TabPane } = Tabs;\n\nconst callback = key => {\n  console.log(key);\n};\n\nconst App = () => (\n  <div className=\"App\">\n    <Tabs defaultActiveKey=\"1\" onChange={callback}>\n      <TabPane tab=\"Tab 1\" key=\"1\">\n        <Timer />\n      </TabPane>\n      <TabPane tab=\"Tab 2\" key=\"2\">\n        <InputTime />\n      </TabPane>\n    </Tabs>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/audio.501352c8.mp3\";"],"sourceRoot":""}