{"version":3,"sources":["components/timeFormatter.jsx","components/Timer/index.js","components/Timer/timer.jsx","components/Countdown/countdown.jsx","components/Countdown/inputTime.jsx","App.jsx","index.jsx"],"names":["timer","timeInMilisec","min","Math","floor","sec","milisec","toString","padStart","Timer","props","startTimer","setState","state","start","startTime","Date","now","count","timerGo","timerId","setTimeout","clearTimeout","resetTimer","this","type","onClick","className","Component","Countdownn","minutes","seconds","newCount","timeInSecs","mins","secs","milise","showTime","progressBar","percent","status","defaultProps","InputTime","sliderChange","value","trunc","Number","sliderValue","minutesChange","secondsChange","startOrPause","disabled","myInterval","setInterval","clearInterval","document","getElementById","play","step","max","onChange","placeholder","rype","TabPane","Tabs","callback","key","console","log","App","defaultActiveKey","tab","ReactDOM","render"],"mappings":"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","file":"static/js/main.bacec695.chunk.js","sourcesContent":["const timer = timeInMilisec => {\n  const min = Math.floor(Math.floor(timeInMilisec / 1000) / 60);\n  const sec = Math.floor(timeInMilisec / 1000) - min * 60;\n  const milisec = Math.floor((timeInMilisec - sec * 1000 - min * 60 * 1000) / 10);\n  return `${min.toString().padStart(2, '0')}:${sec\n    .toString()\n    .padStart(2, '0')}:${milisec.toString().padStart(2, '0')}`;\n};\n\nexport default timer;\n","import Timer from './timer';\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport timer from '../timeFormatter';\nimport './timer.css';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      start: false,\n      startTime: 0,\n    };\n  }\n\n  startTimer = () => {\n    this.setState(\n      state => ({\n        start: !state.start,\n        startTime: Date.now() - state.count,\n      }),\n      () => {\n        const timerGo = () => {\n          this.timerId = setTimeout(() => {\n            const { start } = this.state;\n            if (!start) {\n              clearTimeout(this.timerId);\n              return;\n            }\n            this.setState(state => ({\n              count: Date.now() - state.startTime,\n            }));\n            timerGo();\n          }, 25);\n        };\n        timerGo();\n      }\n    );\n  };\n\n  resetTimer = () => {\n    clearTimeout(this.timerId);\n    this.setState({\n      count: 0,\n      start: false,\n      startTime: 0,\n    });\n  };\n\n  render() {\n    const { count, start } = this.state;\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.startTimer} className=\"btn\">\n          {start === true ? 'pause' : 'start'}\n        </Button>\n        <div className=\"showTime\">The timer is {timer(count)}</div>\n        <Button type=\"primary\" onClick={this.resetTimer} className=\"btn\">\n          Reset\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Progress } from 'antd';\nimport PropTypes from 'prop-types';\nimport './countdown.css';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class Countdownn extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     progress: 0,\n  //     start: false,\n  //     minutesP: 0,\n  //     secondsP: 0,\n  //   };\n  // }\n\n  render() {\n    const { minutes, seconds, count, startTime } = this.props;\n\n    const showTime = timeInSecs => {\n      const mins = Math.floor(Math.floor(timeInSecs / 1000) / 60);\n      const secs = Math.floor(timeInSecs / 1000) - mins * 60;\n      const milise = Math.floor((timeInSecs - secs * 1000 - mins * 60 * 1000) / 10);\n      const outPut = `${mins.toString().padStart(2, '0')}:${secs\n        .toString()\n        .padStart(2, '0')}:${milise.toString().padStart(2, '0')}`;\n      return outPut;\n    };\n\n    const newCount = count < 0 ? `00:00` : showTime(count);\n\n    const progressBar =\n      count === startTime\n        ? Math.floor(count / startTime) * 100\n        : Math.floor((count / startTime) * 100) % 100;\n\n    return (\n      <div>\n        <Progress percent={progressBar} status=\"active\" className=\"progressBar\" />\n        <div>\n          Timer: minutes: {minutes}, seconds: {seconds} or {newCount}\n        </div>\n      </div>\n    );\n  }\n}\nCountdownn.defaultProps = {\n  minutes: 0,\n  seconds: 0,\n  startTime: 0,\n  count: 0,\n  start: false,\n};\nCountdownn.propTypes = {\n  minutes: PropTypes.number,\n  seconds: PropTypes.number,\n  startTime: PropTypes.number,\n  count: PropTypes.number,\n};\n","import React, { Component } from 'react';\nimport { Button, Slider, InputNumber } from 'antd';\nimport './countdown.css';\nimport Countdownn from './countdown';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class InputTime extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      sliderValue: 0,\n      start: false,\n      count: 0,\n      disabled: false,\n      startTime: 0,\n    };\n  }\n\n  componentDidUpdate() {\n    const { start, count } = this.state;\n    if (start && count < 1) {\n      clearInterval(this.myInterval);\n    }\n    if (count === -2 && start === true) {\n      document.getElementById('audio').play();\n    }\n  }\n\n  sliderChange = value => {\n    const minutes = Math.trunc((Number(value) * 100) / 100);\n    let seconds;\n    switch ((value * 100) % 100) {\n      case 25:\n        seconds = 15;\n        break;\n      case 50:\n        seconds = 30;\n        break;\n      case 75:\n        seconds = 45;\n        break;\n      default:\n        seconds = 0;\n        break;\n    }\n    this.setState({\n      minutes,\n      seconds,\n      sliderValue: value,\n      count: (minutes * 60 + seconds) * 1000,\n      startTime: (minutes * 60 + seconds) * 1000,\n    });\n  };\n\n  minutesChange = value => {\n    this.setState({\n      minutes: value > 720 ? 720 : Number(value),\n    });\n    this.setState(({ minutes, seconds }) => ({\n      seconds: minutes >= 720 ? 0 : seconds,\n    }));\n    this.setState(({ minutes, seconds }) => ({\n      count: (minutes * 60 + seconds) * 1000,\n      startTime: (minutes * 60 + seconds) * 1000,\n    }));\n  };\n\n  secondsChange = value => {\n    const { minutes } = this.state;\n    this.setState({\n      seconds: minutes >= 720 ? 0 : Number(value),\n    });\n    this.setState(({ seconds }) => ({\n      count: (minutes * 60 + seconds) * 1000,\n      startTime: (minutes * 60 + seconds) * 1000,\n    }));\n  };\n\n  startOrPause = () => {\n    this.setState(state => ({\n      start: !state.start,\n      disabled: true,\n    }));\n    this.setState(state => {\n      const { start } = state;\n      if (start) {\n        this.myInterval = setInterval(() => {\n          this.setState(({ count }) => ({\n            count: count - 3,\n          }));\n        }, 1);\n      } else {\n        clearInterval(this.myInterval);\n      }\n    });\n  };\n\n  resetTimer = () => {\n    this.setState({\n      start: false,\n      count: 0,\n      minutes: 0,\n      seconds: 0,\n      sliderValue: 0,\n      disabled: false,\n    });\n    clearInterval(this.myInterval);\n  };\n\n  render() {\n    const { minutes, seconds, sliderValue, count, disabled, startTime, start } = this.state;\n    return (\n      <>\n        <Slider\n          step={0.25}\n          min={0}\n          max={60}\n          disabled={disabled}\n          className=\"slider\"\n          onChange={this.sliderChange}\n          value={sliderValue}\n        />\n        <InputNumber\n          max={720}\n          min={0}\n          value={minutes}\n          placeholder=\"Minutes\"\n          type=\"number\"\n          className=\"inputTime\"\n          onChange={this.minutesChange}\n          disabled={disabled}\n        />\n        <InputNumber\n          max={60}\n          min={0}\n          value={seconds}\n          placeholder=\"Seconds\"\n          rype=\"number\"\n          className=\"inputTime\"\n          onChange={this.secondsChange}\n          disabled={disabled}\n        />\n        <Countdownn\n          minutes={minutes}\n          seconds={seconds}\n          count={Math.floor(count)}\n          startTime={startTime}\n          start={start}\n        />\n        <Button type=\"primary\" onClick={this.startOrPause} className=\"btn\">\n          Start/Pause\n        </Button>\n        <Button type=\"primary\" onClick={this.resetTimer} className=\"btn\">\n          Reset\n        </Button>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { Tabs } from 'antd';\nimport Timer from './components/Timer/index';\nimport InputTime from './components/Countdown/inputTime';\n\nconst { TabPane } = Tabs;\n\nconst callback = key => {\n  console.log(key);\n};\n\nconst App = () => (\n  <div className=\"App\">\n    <Tabs defaultActiveKey=\"1\" onChange={callback}>\n      <TabPane tab=\"Tab 1\" key=\"1\">\n        <Timer />\n      </TabPane>\n      <TabPane tab=\"Tab 2\" key=\"2\">\n        <InputTime />\n      </TabPane>\n    </Tabs>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}